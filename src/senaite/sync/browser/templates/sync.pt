<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="senaite">
  <head>
    <metal:block fill-slot="javascript_head_slot"
                 tal:define="portal context/@@plone_portal_state/portal;">
    </metal:block>
  </head>
  <body>

    <metal:title fill-slot="content-title">
      <h1 i18n:translate="">
        SENAITE SYNC REMOTES
      </h1>
    </metal:title>
    <metal:description fill-slot="content-description">
      <p i18n:translate="">
      </p>
    </metal:description>

    <div metal:fill-slot="content-core"
         tal:define="portal context/@@plone_portal_state/portal;">

      <form action="sync_add">
        <input type="submit" value="Add New Remote" />
      </form><br><br>

      <!-- Storage View -->
      <tal:storage repeat="storage view/storage">
        <div style="border:double; padding:10px">
        <form
          name="data_form"
          method="POST">

          <dl class="collapsible">

            <dt class="collapsibleHeader">
              <span tal:replace="python: storage.upper()"/>
              (<span tal:replace="python:len(view.storage[storage]['ordered_uids'])"/> Items)
            </dt>
            <input type="hidden" name="dataform" value="1"/>
            <input type="hidden" name="domain_name" value="" tal:attributes="value storage" />

            <dd class="collapsibleContent">
              <div
                      tal:define="content_types python: view.get_storage_config(storage, 'content_types');
                                  unwanted_content_types python: view.get_storage_config(storage, 'unwanted_content_types');
                                  prefixable_types python: view.get_storage_config(storage, 'prefixable_types');
                                  read_only_types python: view.get_storage_config(storage, 'read_only_types');
                                  update_only_types python: view.get_storage_config(storage, 'update_only_types');"
              >
                  <b>Remote's Prefix: <span style="font-size: medium" tal:replace="python: view.get_storage_config(storage, 'remote_prefix', 'Not Defined')"/></b><br><br>
                  <b>Local Prefix: <span style="font-size: medium" tal:replace="python: view.get_storage_config(storage, 'local_prefix', 'Not Defined')"/></b><br><br>
                  Settings will <span tal:condition="python: not view.get_storage_config(storage, 'import_settings')">NOT</span>,
                  Registry will <span tal:condition="python: not view.get_storage_config(storage, 'import_registry')">NOT</span>,
                  Users will <span tal:condition="python: not view.get_storage_config(storage, 'import_users')">NOT</span> be imported.<br><br>

                  Content types to be imported: <b><span tal:replace="python: ', '.join(content_types) if content_types else 'All the content types'"/> </b><br><br>
                  Content types to be skipped: <b><span tal:replace="python: ', '.join(unwanted_content_types) if unwanted_content_types else 'Not specified'"/> </b><br><br>
                  Content types that will contain prefix: <b><span tal:replace="python: ', '.join(prefixable_types) if prefixable_types else 'Not defined'"/> </b><br><br>
                  Content types that will be in read-only mode: <b><span tal:replace="python: ', '.join(read_only_types) if read_only_types else 'Not defined'"/> </b><br><br>
                  Content types just to be updated: <b><span tal:replace="python: ', '.join(update_only_types) if update_only_types else 'Not defined'"/> </b><br><br>
              </div><br>
              <input class="btn btn-default btn-sm"
                     type="submit"
                     name="import"
                     i18n:attributes="value"
                     value="Import"/>

              <input class="btn btn-default btn-sm"
                     type="submit"
                     onclick="return confirm('Are you sure you want to delete all the fetched data?');"
                     name="clear_storage"
                     i18n:attributes="value"
                     value="Clear this Storage"/>
              <div style="margin-top: 15px">
                  <dl class="collapsible">
                      <dt class="collapsibleHeader">
                          RUN COMPLEMENT STEP
                      </dt>
                      <dd class="collapsibleContent">
                          <div class="field form-group field">
                              <label i18n:translate=""
                                     class="form-control-label"
                                     for="mod_date_limit">
                                Modification Date Limit
                                <span i18n:translate=""
                                      class="help formHelp">
                                  If filled, complement step will run for the objects created/modified after this time.
                                </span>
                              </label>
                              <div class="form-group input-group">
                                <input type="text"
                                       size="25"
                                       class="form-control"
                                       id="mod_date_limit"
                                       name="mod_date_limit"/>
                                </div>
                          </div>
                          <input class="btn btn-default btn-sm"
                                 type="submit"
                                 name="complement"
                                 i18n:attributes="value"
                                 value="Complement"/>
                      </dd>
                  </dl>
              </div>
            </dd>
          </dl>
        </form>
      </div>
      </tal:storage>

    </div>

  </body>
</html>
