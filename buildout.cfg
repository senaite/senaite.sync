[buildout]
parts =
    instance
    lxml
    test
    write_code_headers
    write_contributors
    robot
    code-analysis
    coverage
    test-coverage
    dependencychecker
    omelette
    i18ndude

extends =
    http://dist.plone.org/release/4.3.15/versions.cfg

find-links =
    http://dist.plone.org/release/4.3.15
    http://dist.plone.org/thirdparty

eggs =
    Plone
    Pillow
    plone.reload
    bika.lims
    i18ndude
    Products.PrintingMailHost

zcml =

versions = versions
extensions = mr.developer

eggs-directory = ${buildout:directory}/eggs
download-cache = ~/.buildout/downloads

sources = sources
auto-checkout = *

develop = .

[sources]
bika.lims = git git://github.com/senaite/bika.lims.git pushurl=git@github.com:senaite/bika.lims.git branch=senaite-integration
senaite.api = git git://github.com/senaite/senaite.api.git pushurl=git@github.com:senaite/senaite.api.git branch=master
senaite.jsonapi = git git://github.com/senaite/senaite.jsonapi.git pushurl=git@github.com:senaite/senaite.jsonapi.git branch=master

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 0.0.0.0:8080
eggs =
    senaite.sync
    ${buildout:eggs}
zcml =
    ${buildout:zcml}
environment-vars =
    zope_i18n_compile_mo_files true

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml==2.3.6
force = false
static-build = true

[test]
recipe = zc.recipe.testrunner
eggs =
    senaite.sync [test]
defaults = ['--auto-color', '--auto-progress']

[write_code_headers]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/write_code_headers
input = ${buildout:directory}/templates/write_code_headers.py.in
mode = 755

[write_contributors]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/write_contributors
input = ${buildout:directory}/templates/write_contributors.py.in
mode = 755

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/senaite/api
clean-lines = True
clean-lines-exclude =
    **/node_modules/*
find-untranslated = False
i18ndude-bin = ${buildout:bin-directory}/i18ndude
utf8-header = True
deprecated-aliases = True
flake8-extensions =
    flake8-blind-except
    flake8-coding
    flake8-debugger
flake8-ignore = E241,E301,E501
multiprocessing = True
return-status-codes = False

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=80
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755

[dependencychecker]
recipe = zc.recipe.egg
eggs =
    z3c.dependencychecker
scripts = dependencychecker

[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework
scripts =
    robot-server
    robot

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

[versions]
setuptools =
zc.buildout =